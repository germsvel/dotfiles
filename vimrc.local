set nocompatible               " be iMproved
filetype off                   " required!

set nowrap

" recommended configurations for powerline
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs

" Highlight matching parentheses
set showmatch

" Set searching to case-insensitive if the pattern is only
" lowercase, but case-sensitive otherwise
set ignorecase
set smartcase

" Highlight search times and show the matches as you type
" set hlsearch " this can sometimes be annoying
set incsearch

" Set relative numbers only when focused
:au FocusGained * :set relativenumber
:au FocusLost * :set number

" Set colors
syntax enable
set background=dark
colorscheme solarized

" Set tab width
set tabstop=2
set shiftwidth=2
set expandtab

" Remove trailing whitespace upon save
autocmd BufWritePre * :%s/\s\+$//e

" Turn on auto-indenting and set it to copy previous
" indentation
set autoindent
set copyindent

" Required for vim-powerlinE
let g:Powerline_symbols = 'fancy'

" auto format for elm
let g:elm_format_autosave = 1

" testing strategy for vim-test
let test#strategy = "tslime"
let g:tslime_always_current_session = 1
let g:tslime_always_current_window = 1


" Some tslime mappings
vmap <Leader>mt <Plug>SendSelectionToTmux
nmap <Leader>mt <Plug>NormalModeSendToTmux

" Kills beeps
set noeb vb t_vb=

" for terminal
set t_Co=256

" cursoer shape in iTerm2
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

 " mappings
 map <Leader>r :set relativenumber!<CR>
 map <Leader>e :set number<CR>
 map <Leader>n :set nonumber<CR>

 " map vertical resizing
 map <Leader>v4 :exe "vertical resize 400"<CR>
 map <Leader>v3 :exe "vertical resize 300"<CR>
 map <Leader>v2 :exe "vertical resize 200"<CR>
 map <Leader>v1 :exe "vertical resize 100"<CR>
 map <Leader>vm :exe "vertical resize 50"<CR>

 " map pasting
 map <Leader>p "0p<CR>

" solraized colorscheme
syntax enable
set background=dark
colorscheme solarized


" gist-vim configurations
let g:gist_detect_filetype = 1
let g:gist_open_browser_after_post = 1


" help formatting json
com! FormatJson %!python -m json.tool
